@using PointerStar.Client.ViewModels;
@using PointerStar.Shared;
@inherits ComponentBase<UserDialogViewModel>

<MudDialog>
    <DialogContent>
        <MudStack>
            <MudTextField @bind-Value="ViewModel.Name" Label="Name" Variant="Variant.Text" MaxLength=User.MaxNameLength FullWidth=true></MudTextField>
            <MudStack Row=true>
                <MudText>I want to...</MudText>
                <MudButtonGroup OverrideStyles="false">
                    <MudButton Color="Color.Primary"
                               Variant="@(ViewModel.SelectedRoleId == Role.TeamMember.Id ? Variant.Filled : Variant.Outlined)"
                               OnClick="() => ViewModel.SelectRole(Role.TeamMember)">
                        Vote
                    </MudButton>
                    <MudButton Color="Color.Primary"
                               Variant="@(ViewModel.SelectedRoleId == Role.Facilitator.Id ? Variant.Filled : Variant.Outlined)"
                               OnClick="() => ViewModel.SelectRole(Role.Facilitator)">
                        Facilitate
                    </MudButton>
                    <MudButton Color="Color.Primary"
                               Variant="@(ViewModel.SelectedRoleId == Role.Observer.Id ? Variant.Filled : Variant.Outlined)"
                               OnClick="() => ViewModel.SelectRole(Role.Observer)">
                        Observe
                    </MudButton>
                </MudButtonGroup>
            </MudStack>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; }
    [Parameter]
    public string? RoomId { get; set; }
    [Parameter]
    public string? Name { get; set; }
    [Parameter]
    public Guid? SelectedRoleId { get; set; }

    private void Submit() => MudDialog?.Close(DialogResult.Ok(ViewModel));
    private void Cancel() => MudDialog?.Cancel();

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        ViewModel.Name = Name;
        ViewModel.SelectedRoleId = SelectedRoleId;
        await ViewModel.LoadRoomDataAsync(RoomId);
    }
}
